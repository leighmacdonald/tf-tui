components:
  schemas:
    BDFileInfo:
      additionalProperties: false
      properties:
        authors:
          description: A list of authors of the list
          items:
            type: string
          nullable: true
          type: array
        description:
          description: Description of the list
          type: string
        title:
          description: Long form name of the list
          type: string
        update_url:
          description: URL where an update to date copy can be fetched
          type: string
      required:
        - authors
        - description
        - title
        - update_url
      type: object
    BDLastSeen:
      additionalProperties: false
      properties:
        player_name:
          description: Name of the player when last seen
          type: string
        time:
          description: Time the player was last seen. Unix timestamp format.
          format: int64
          type: integer
      type: object
    BDPlayer:
      additionalProperties: false
      properties:
        attributes:
          description: A list of attributes associated with the player
          example:
            - cheater
          items:
            type: string
          nullable: true
          type: array
        last_seen:
          $ref: "#/components/schemas/BDLastSeen"
          description: The last time the player was seem, according to the parent list
        proof:
          description: Some sort of proof. Please note this is easily manipulatable.
          items:
            type: string
          nullable: true
          type: array
        steamid:
          description: SteamID of the player
      required:
        - attributes
        - steamid
        - proof
      type: object
    BDSchema:
      additionalProperties: false
      properties:
        $schema:
          description: Location of the schema describing the response
          type: string
        file_info:
          $ref: "#/components/schemas/BDFileInfo"
          description: Meta info about the bot detector list
        players:
          description: List of player entries
          items:
            $ref: "#/components/schemas/BDPlayer"
          nullable: true
          type: array
      required:
        - $schema
        - file_info
        - players
      type: object
    BDSearchResult:
      additionalProperties: false
      properties:
        list_name:
          description: Unique name of the bot detector list
          type: string
        match:
          $ref: "#/components/schemas/BDPlayer"
          description: The matched entry from the list
      required:
        - list_name
        - match
      type: object
    Ban:
      additionalProperties: false
      properties:
        created_on:
          description: When the ban was created
          format: date-time
          type: string
        expires_on:
          description: When the ban expires. Null generally means permanent.
          format: date-time
          nullable: true
          type: string
        name:
          description: Name of the user
          type: string
        permanent:
          description: Whether the ban is permanent
          type: boolean
        reason:
          description: Reason of the ban
          type: string
        site_name:
          description: Unique shorthand name of the site
          type: string
        steam_id:
          description: Steam ID of the banned player
          type: string
        unban_reason:
          description: Reason for the unban
          type: string
        unbanned:
          description: Is the player unbanned
          type: boolean
      required:
        - steam_id
        - site_name
        - reason
        - created_on
        - expires_on
        - permanent
        - name
        - unbanned
        - unban_reason
      type: object
    Duration:
      additionalProperties: false
      type: object
    ErrorDetail:
      additionalProperties: false
      properties:
        location:
          description: Where the error occurred, e.g. 'body.items[3].tags' or 'path.thing-id'
          type: string
        message:
          description: Error message text
          type: string
        value:
          description: The value at the given location
      type: object
    ErrorModel:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/ErrorModel.json
          format: uri
          readOnly: true
          type: string
        detail:
          description: A human-readable explanation specific to this occurrence of the problem.
          example: Property foo is required but is missing.
          type: string
        errors:
          description: Optional list of individual error details
          items:
            $ref: "#/components/schemas/ErrorDetail"
          nullable: true
          type: array
        instance:
          description: A URI reference that identifies the specific occurrence of the problem.
          example: https://example.com/error-log/abc123
          format: uri
          type: string
        status:
          description: HTTP status code
          example: 400
          format: int64
          type: integer
        title:
          description: A short, human-readable summary of the problem type. This value should not change between occurrences of the error.
          example: Bad Request
          type: string
        type:
          default: about:blank
          description: A URI reference to human-readable documentation for the error.
          example: https://example.com/errors/example
          format: uri
          type: string
      type: object
    Float32:
      additionalProperties: false
      properties:
        Value:
          format: float
          type: number
      required:
        - Value
      type: object
    Friend:
      additionalProperties: false
      properties:
        created_on:
          format: date-time
          type: string
        friend_since:
          format: date-time
          type: string
        relationship:
          type: string
        removed_on:
          format: date-time
          nullable: true
          type: string
        steam_id:
          type: string
        updated_on:
          format: date-time
          type: string
      required:
        - steam_id
        - relationship
        - friend_since
        - removed_on
        - updated_on
        - created_on
      type: object
    GameOwnedPlayer:
      additionalProperties: false
      properties:
        app_id:
          description: The AppID of the game
          format: int32
          minimum: 0
          type: integer
        has_community_visible_stats:
          description: Does the game have visible stats
          type: boolean
        img_icon_url:
          description: URL of the icon
          type: string
        img_logo_url:
          description: URL of the logo
          type: string
        name:
          description: Title of the game
          type: string
        playtime_forever_minutes:
          description: How long the user has played the game (minutes)
          format: int64
          type: integer
        playtime_two_weeks:
          description: How long the user has played the game in the last two weeks
          format: int64
          type: integer
        steam_id:
          description: Owner steam id
          type: string
      required:
        - steam_id
        - app_id
        - name
        - img_icon_url
        - img_logo_url
        - playtime_forever_minutes
        - playtime_two_weeks
        - has_community_visible_stats
      type: object
    LeaguePlayerTeamHistory:
      additionalProperties: false
      properties:
        alias:
          description: Short team name alias, if available
          type: string
        division_name:
          description: Name of the division/ranking
          type: string
        format:
          description: Game format
          type: string
        joined_team:
          description: When they joined the team
          format: date-time
          nullable: true
          type: string
        leader:
          description: Leader for the team
          type: boolean
        league:
          description: League name
          type: string
        left_team:
          description: When they left the team
          format: date-time
          nullable: true
          type: string
        rank:
          description: End of season rank
          format: int64
          type: integer
        region:
          description: Region
          type: string
        season_name:
          description: Season/Event name
          type: string
        steam_id:
          description: 64bit steam ID as a string
          type: string
        tag:
          description: Short team name tag, if available
          type: string
        team_name:
          description: Name of the team
          type: string
        type:
          description: Tournament type
          type: string
      required:
        - league
        - type
        - season_name
        - format
        - region
        - steam_id
        - team_name
        - division_name
        - rank
        - tag
        - alias
        - leader
      type: object
    LeagueResponse:
      additionalProperties: false
      properties:
        format:
          description: The game format played
          enum:
            - 6v6
            - nr6v6
            - prolander
            - 4v4
            - 1v1
            - highlander
            - passtime
            - ultiduo
            - bball
            - readysteadypan
            - other
          type: string
        league:
          description: The league the competition belongs to
          type: string
        league_id:
          description: The unique ID of the competition on the source site
          format: int64
          type: integer
        name:
          description: Name of the competition
          type: string
        region:
          description: The geographical region, if available
          type: string
        type:
          description: The type of competition
          enum:
            - season
            - cup
            - other
          type: string
      required:
        - league
        - type
        - name
        - format
        - region
        - league_id
      type: object
    LeagueTeamMemberResponse:
      additionalProperties: false
      properties:
        joined:
          format: date-time
          nullable: true
          type: string
        leader:
          type: boolean
        league_id:
          format: int64
          type: integer
        left:
          format: date-time
          nullable: true
          type: string
        name:
          type: string
        steam_id:
          type: string
      required:
        - steam_id
        - name
        - leader
        - league_id
      type: object
    LeagueTeamResponse:
      additionalProperties: false
      properties:
        division_name:
          description: Division of the team
          type: string
        league:
          description: The league the team belongs to
          type: string
        league_id:
          description: The unique ID of the team on the source site
          format: int64
          type: integer
        name:
          description: Name of the team
          type: string
        rank:
          description: Final team ranking, if available
          format: int64
          type: integer
        tag:
          description: Short team name tag, if available
          type: string
        team_id:
          description: UUIDv4
          type: string
      required:
        - team_id
        - league
        - name
        - division_name
        - rank
        - tag
        - league_id
      type: object
    LogsTFChat:
      additionalProperties: false
      properties:
        message:
          type: string
        name:
          type: string
        steam_id:
          type: string
      required:
        - steam_id
        - name
        - message
      type: object
    LogsTFClassCountMap:
      additionalProperties: false
      properties:
        demoman:
          format: int64
          type: integer
        engineer:
          format: int64
          type: integer
        heavyweapons:
          format: int64
          type: integer
        medic:
          format: int64
          type: integer
        pyro:
          format: int64
          type: integer
        scout:
          format: int64
          type: integer
        sniper:
          format: int64
          type: integer
        soldier:
          format: int64
          type: integer
        spy:
          format: int64
          type: integer
      required:
        - scout
        - soldier
        - pyro
        - demoman
        - heavyweapons
        - engineer
        - medic
        - spy
        - sniper
      type: object
    LogsTFKillStreak:
      additionalProperties: false
      properties:
        steamid:
          type: string
        streak:
          format: int64
          type: integer
        time:
          format: int64
          type: integer
      required:
        - steamid
        - streak
        - time
      type: object
    LogsTFMatch:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/LogsTFMatch.json
          format: uri
          readOnly: true
          type: string
        chat:
          description: A log of the chat messages
          items:
            $ref: "#/components/schemas/LogsTFChat"
          nullable: true
          type: array
        created_on:
          description: When the match occurred
          format: date-time
          type: string
        duration:
          $ref: "#/components/schemas/Duration"
          description: Duration of the match (seconds)
        killstreaks:
          description: Any killstreaks recorded
          items:
            $ref: "#/components/schemas/LogsTFKillStreak"
          nullable: true
          type: array
        log_id:
          description: The log id as provided by logs.tf
          format: int64
          type: integer
        map:
          description: Map played
          type: string
        medics:
          description: Summary of medic stats
          items:
            $ref: "#/components/schemas/LogsTFMedicOverall"
          nullable: true
          type: array
        players:
          description: Summary of player stats
          items:
            $ref: "#/components/schemas/LogsTFPlayerAlt"
          nullable: true
          type: array
        rounds:
          description: Details about each round. May not be present in old logs
          items:
            $ref: "#/components/schemas/LogsTFRound"
          nullable: true
          type: array
        score_blu:
          description: Final score for BLU team.
          format: int64
          type: integer
        score_red:
          description: Final score for RED team.
          format: int64
          type: integer
        teams:
          $ref: "#/components/schemas/LogsTFTeams"
          description: Overall stats for the teams
        title:
          description: Name of the match
          type: string
        version:
          description: Version of the match
          enum:
            - 1
            - 2
            - 3
          format: int64
          type: integer
      required:
        - teams
        - rounds
        - players
        - medics
        - chat
        - killstreaks
        - log_id
        - version
        - title
        - map
        - duration
        - score_red
        - score_blu
        - created_on
      type: object
    LogsTFMatchInfo:
      additionalProperties: false
      properties:
        created_on:
          description: When the match occurred
          format: date-time
          type: string
        duration:
          $ref: "#/components/schemas/Duration"
          description: Duration of the match (seconds)
        log_id:
          description: The log id as provided by logs.tf
          format: int64
          type: integer
        map:
          description: Map played
          type: string
        score_blu:
          description: Final score for BLU team.
          format: int64
          type: integer
        score_red:
          description: Final score for RED team.
          format: int64
          type: integer
        title:
          description: Name of the match
          type: string
        version:
          description: Version of the match
          enum:
            - 1
            - 2
            - 3
          format: int64
          type: integer
      required:
        - log_id
        - version
        - title
        - map
        - duration
        - score_red
        - score_blu
        - created_on
      type: object
    LogsTFMedicOverall:
      additionalProperties: false
      properties:
        avg_time_before_healing:
          format: double
          type: number
        avg_time_build:
          $ref: "#/components/schemas/Duration"
        avg_time_use:
          $ref: "#/components/schemas/Duration"
        avg_uber_len:
          $ref: "#/components/schemas/Duration"
        biggest_adv_lost:
          $ref: "#/components/schemas/Duration"
        charges_kritz:
          format: int64
          type: integer
        charges_medigun:
          format: int64
          type: integer
        charges_quickfix:
          format: int64
          type: integer
        charges_vacc:
          format: int64
          type: integer
        death_after_charge:
          format: int64
          type: integer
        drops:
          format: int64
          type: integer
        healing:
          format: int64
          type: integer
        healing_per_min:
          format: double
          type: number
        healspread:
          additionalProperties:
            format: int64
            type: integer
          type: object
        major_adv_lost:
          format: int64
          type: integer
        near_full_death:
          format: int64
          type: integer
        steam_id:
          type: string
      required:
        - steam_id
        - healing
        - healing_per_min
        - charges_kritz
        - charges_quickfix
        - charges_medigun
        - charges_vacc
        - drops
        - avg_time_build
        - avg_time_use
        - avg_time_before_healing
        - near_full_death
        - avg_uber_len
        - death_after_charge
        - major_adv_lost
        - biggest_adv_lost
        - healspread
      type: object
    LogsTFPlayerAlt:
      additionalProperties: false
      properties:
        airshots:
          format: int64
          type: integer
        assists:
          format: int64
          type: integer
        backstabs:
          format: int64
          type: integer
        caps:
          format: int64
          type: integer
        class_assists:
          $ref: "#/components/schemas/LogsTFClassCountMap"
        class_deaths:
          $ref: "#/components/schemas/LogsTFClassCountMap"
        class_kills:
          $ref: "#/components/schemas/LogsTFClassCountMap"
        classes:
          items:
            $ref: "#/components/schemas/LogsTFPlayerClassStats"
          nullable: true
          type: array
        damage:
          format: int64
          type: integer
        damage_taken:
          format: int64
          type: integer
        deaths:
          format: int64
          type: integer
        dpm:
          format: int64
          type: integer
        dtm:
          format: double
          type: number
        headshots:
          format: int64
          type: integer
        healing_taken:
          format: int64
          type: integer
        health_packs:
          format: int64
          type: integer
        health_packs_healing:
          format: int64
          type: integer
        kad:
          format: double
          type: number
        kd:
          format: double
          type: number
        kills:
          format: int64
          type: integer
        name:
          type: string
        steam_id:
          type: string
        team:
          type: string
      required:
        - steam_id
        - team
        - name
        - kills
        - assists
        - deaths
        - damage
        - dpm
        - kad
        - kd
        - damage_taken
        - dtm
        - health_packs
        - health_packs_healing
        - backstabs
        - headshots
        - airshots
        - caps
        - healing_taken
        - classes
        - class_kills
        - class_deaths
        - class_assists
      type: object
    LogsTFPlayerClassStats:
      additionalProperties: false
      properties:
        assists:
          format: int64
          type: integer
        class:
          type: string
        damage:
          format: int64
          type: integer
        deaths:
          format: int64
          type: integer
        kills:
          format: int64
          type: integer
        played:
          $ref: "#/components/schemas/Duration"
        weapons:
          items:
            $ref: "#/components/schemas/LogsTFPlayerClassWeapon"
          nullable: true
          type: array
      required:
        - class
        - played
        - kills
        - assists
        - deaths
        - damage
        - weapons
      type: object
    LogsTFPlayerClassWeapon:
      additionalProperties: false
      properties:
        SteamID:
          type: string
        accuracy:
          format: int64
          type: integer
        damage:
          format: int64
          type: integer
        hits:
          format: int64
          type: integer
        kills:
          format: int64
          type: integer
        shots:
          format: int64
          type: integer
        weapon:
          type: string
      required:
        - SteamID
        - weapon
        - kills
        - damage
        - shots
        - hits
        - accuracy
      type: object
    LogsTFPlayerSummary:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/LogsTFPlayerSummary.json
          format: uri
          readOnly: true
          type: string
        airshots_avg:
          $ref: "#/components/schemas/Float32"
        airshots_sum:
          format: int64
          type: integer
        assists_avg:
          $ref: "#/components/schemas/Float32"
        assists_sum:
          format: int64
          type: integer
        backstabs_avg:
          $ref: "#/components/schemas/Float32"
        backstabs_sum:
          format: int64
          type: integer
        caps_avg:
          $ref: "#/components/schemas/Float32"
        caps_sum:
          format: int64
          type: integer
        damage_avg:
          $ref: "#/components/schemas/Float32"
        damage_sum:
          format: int64
          type: integer
        damage_taken_avg:
          $ref: "#/components/schemas/Float32"
        damage_taken_sum:
          format: int64
          type: integer
        deaths_avg:
          $ref: "#/components/schemas/Float32"
        deaths_sum:
          format: int64
          type: integer
        dpm_avg:
          $ref: "#/components/schemas/Float32"
        dtm_avg:
          $ref: "#/components/schemas/Float32"
        headshots_avg:
          $ref: "#/components/schemas/Float32"
        headshots_sum:
          format: int64
          type: integer
        healing_taken_avg:
          $ref: "#/components/schemas/Float32"
        healing_taken_sum:
          format: int64
          type: integer
        health_packs_avg:
          $ref: "#/components/schemas/Float32"
        health_packs_sum:
          format: int64
          type: integer
        kad_avg:
          $ref: "#/components/schemas/Float32"
        kd_avg:
          $ref: "#/components/schemas/Float32"
        kills_avg:
          $ref: "#/components/schemas/Float32"
        kills_sum:
          format: int64
          type: integer
        logs:
          format: int64
          type: integer
      required:
        - logs
        - kills_avg
        - assists_avg
        - deaths_avg
        - damage_avg
        - dpm_avg
        - kad_avg
        - kd_avg
        - damage_taken_avg
        - dtm_avg
        - health_packs_avg
        - backstabs_avg
        - headshots_avg
        - airshots_avg
        - caps_avg
        - healing_taken_avg
        - kills_sum
        - assists_sum
        - deaths_sum
        - damage_sum
        - damage_taken_sum
        - health_packs_sum
        - backstabs_sum
        - headshots_sum
        - airshots_sum
        - caps_sum
        - healing_taken_sum
      type: object
    LogsTFRound:
      additionalProperties: false
      properties:
        damage_blu:
          description: BLU damage count
          format: int64
          type: integer
        damage_red:
          description: RED damage count
          format: int64
          type: integer
        kills_blu:
          description: BLU kill count
          format: int64
          type: integer
        kills_red:
          description: RED kill count
          format: int64
          type: integer
        length:
          $ref: "#/components/schemas/Duration"
          description: Length of the round (seconds)
        mid_fight:
          description: Who won the midfight
          type: string
        players:
          description: Stats for the players during the round
          items:
            $ref: "#/components/schemas/LogsTFRoundPlayerAlt"
          nullable: true
          type: array
        round:
          description: Round number
          format: int64
          type: integer
        score_blu:
          description: BLU score at end of round
          format: int64
          type: integer
        score_red:
          description: RED score at end of round
          format: int64
          type: integer
        ubers_blu:
          description: BLU uber count
          format: int64
          type: integer
        ubers_red:
          description: RED uber count
          format: int64
          type: integer
      required:
        - round
        - length
        - score_blu
        - score_red
        - kills_blu
        - kills_red
        - ubers_blu
        - ubers_red
        - damage_blu
        - damage_red
        - players
      type: object
    LogsTFRoundPlayerAlt:
      additionalProperties: false
      properties:
        dmg:
          description: Total damage
          format: int64
          type: integer
        kills:
          description: Total kills
          format: int64
          type: integer
        steam_id:
          description: Player steam id
          type: string
      required:
        - steam_id
        - kills
        - dmg
      type: object
    LogsTFTeamOverall:
      additionalProperties: false
      properties:
        caps:
          format: int64
          type: integer
        charges:
          format: int64
          type: integer
        damage:
          format: int64
          type: integer
        deaths:
          format: int64
          type: integer
        drops:
          format: int64
          type: integer
        first_caps:
          format: int64
          type: integer
        kills:
          format: int64
          type: integer
        score:
          format: int64
          type: integer
      required:
        - score
        - kills
        - deaths
        - damage
        - charges
        - drops
        - first_caps
        - caps
      type: object
    LogsTFTeams:
      additionalProperties: false
      properties:
        blu:
          $ref: "#/components/schemas/LogsTFTeamOverall"
        red:
          $ref: "#/components/schemas/LogsTFTeamOverall"
      required:
        - red
        - blu
      type: object
    MetaProfile:
      additionalProperties: false
      properties:
        avatar_hash:
          description: The avatar hash of the user
          type: string
        bans:
          description: Number of 3rd party bans. Includes leagues and pubs.
          items:
            $ref: "#/components/schemas/Ban"
          nullable: true
          type: array
        community_banned:
          description: Is the user steam community banned
          type: boolean
        community_visibility_state:
          description: Represents whether the profile is visible or not and why.
          enum:
            - 1
            - 2
            - 3
          format: int64
          type: integer
        competitive_teams:
          description: Competitive league team history
          items:
            $ref: "#/components/schemas/LeaguePlayerTeamHistory"
          nullable: true
          type: array
        days_since_last_ban:
          format: int64
          type: integer
        economy_ban:
          description: Is the user trade banned
          type: string
        friends:
          description: Last known list of friends
          items:
            $ref: "#/components/schemas/Friend"
          nullable: true
          type: array
        logs_count:
          description: Number of logs the user has on logs.tf
          format: int64
          type: integer
        number_of_game_bans:
          description: How many game bans the user has
          format: int64
          type: integer
        number_of_vac_bans:
          description: How many vac bans does the user have
          format: int64
          type: integer
        persona_name:
          description: The current alias of the user
          type: string
        profile_state:
          description: Has the profile been setup
          enum:
            - 0
            - 1
          format: int64
          type: integer
        real_name:
          description: Real name of the user
          type: string
        steam_id:
          description: 64bit Steam ID
          type: string
        time_created:
          description: When the account was created. This may be estimated if not available.
          format: int64
          type: integer
      required:
        - steam_id
        - community_visibility_state
        - profile_state
        - persona_name
        - avatar_hash
        - real_name
        - time_created
        - community_banned
        - number_of_vac_bans
        - days_since_last_ban
        - number_of_game_bans
        - economy_ban
        - logs_count
        - bans
        - friends
        - competitive_teams
      type: object
    PlayerSummaryResponse:
      additionalProperties: false
      properties:
        avatar_hash:
          type: string
        comment_permission:
          format: int64
          type: integer
        last_logoff:
          format: int64
          type: integer
        loc_city_id:
          format: int64
          type: integer
        loc_country_code:
          type: string
        loc_state_code:
          type: string
        persona_name:
          type: string
        persona_state:
          format: int64
          type: integer
        persona_state_flags:
          format: int64
          type: integer
        primary_clan_id:
          type: string
        profile_state:
          format: int64
          type: integer
        profile_url:
          type: string
        real_name:
          type: string
        steam_id:
          type: string
        time_created:
          format: int64
          type: integer
        visibility_state:
          format: int64
          type: integer
      required:
        - steam_id
        - visibility_state
        - profile_state
        - persona_name
        - profile_url
        - avatar_hash
        - persona_state
        - real_name
        - primary_clan_id
        - time_created
        - persona_state_flags
        - loc_country_code
        - loc_state_code
        - loc_city_id
        - last_logoff
        - comment_permission
      type: object
    PlayerTeamHistoryResponse:
      additionalProperties: false
      properties:
        alias:
          description: Player alias on team
          type: string
        division_name:
          description: Division name
          type: string
        format:
          description: The format of games.
          type: string
        joined_team:
          description: Date of joining the team
          format: date-time
          nullable: true
          type: string
        leader:
          description: Was a team leader
          type: boolean
        league:
          description: Unique shorthand name of the league
          type: string
        left_team:
          description: Date of leaving the team
          format: date-time
          nullable: true
          type: string
        rank:
          description: Final ranking
          format: int64
          type: integer
        region:
          description: The geographical region
          type: string
        season_name:
          description: Season/Cup name
          type: string
        steam_id:
          type: string
        tag:
          description: Short tag for the team
          type: string
        team_name:
          description: Name of the team
          type: string
        type:
          description: Type of the tournament
          enum:
            - season
            - cup
            - other
          type: string
      required:
        - league
        - type
        - season_name
        - format
        - region
        - steam_id
        - team_name
        - division_name
        - rank
        - tag
        - alias
        - leader
        - joined_team
        - left_team
      type: object
    ResolvedSteamID:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/ResolvedSteamID.json
          format: uri
          readOnly: true
          type: string
        profile:
          type: string
        steam:
          type: string
        steam3:
          type: string
        steam32:
          format: int32
          minimum: 0
          type: integer
        steam64:
          type: string
      required:
        - steam64
        - steam32
        - steam3
        - steam
        - profile
      type: object
    SchemaAttributes:
      additionalProperties: false
      properties:
        class:
          type: string
        name:
          type: string
        value: {}
      required:
        - name
        - class
        - value
      type: object
    SchemaItem:
      additionalProperties: false
      properties:
        attributes:
          items:
            $ref: "#/components/schemas/SchemaAttributes"
          nullable: true
          type: array
        capabilities:
          $ref: "#/components/schemas/SchemaItemCapabilities"
        craft_class:
          type: string
        craft_material_type:
          type: string
        defindex:
          format: int64
          type: integer
        drop_type:
          type: string
        image_inventory:
          type: string
        image_url:
          type: string
        image_url_large:
          type: string
        item_class:
          type: string
        item_description:
          type: string
        item_name:
          type: string
        item_quality:
          format: int64
          type: integer
        item_slot:
          type: string
        item_type_name:
          type: string
        max_ilevel:
          format: int64
          type: integer
        min_ilevel:
          format: int64
          type: integer
        model_player:
          type: string
        name:
          type: string
        proper_name:
          type: boolean
        styles:
          items:
            $ref: "#/components/schemas/SchemaItemStyles"
          nullable: true
          type: array
        used_by_classes:
          items:
            type: string
          nullable: true
          type: array
      required:
        - name
        - defindex
        - item_class
        - item_type_name
        - item_name
        - proper_name
        - item_slot
        - model_player
        - item_quality
        - image_inventory
        - min_ilevel
        - max_ilevel
        - image_url
        - image_url_large
        - craft_class
        - craft_material_type
        - styles
      type: object
    SchemaItemCapabilities:
      additionalProperties: false
      properties:
        can_be_restored:
          type: boolean
        can_card_upgrade:
          type: boolean
        can_consume:
          type: boolean
        can_craft_count:
          type: boolean
        can_craft_if_purchased:
          type: boolean
        can_craft_mark:
          type: boolean
        can_gift_wrap:
          type: boolean
        can_killstreakify:
          type: boolean
        can_strangify:
          type: boolean
        nameable:
          type: boolean
        paintable:
          type: boolean
        strange_parts:
          type: boolean
      required:
        - paintable
        - nameable
        - can_craft_if_purchased
        - can_gift_wrap
        - can_craft_count
        - can_craft_mark
        - can_be_restored
        - strange_parts
        - can_card_upgrade
        - can_strangify
        - can_killstreakify
        - can_consume
      type: object
    SchemaItemStyles:
      additionalProperties: false
      properties:
        name:
          type: string
      required:
        - name
      type: object
    SiteStats:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/SiteStats.json
          format: uri
          readOnly: true
          type: string
        avatar_count:
          description: Number of avatars tracked.
          format: int64
          type: integer
        ban_counts:
          additionalProperties:
            format: int64
            type: integer
          description: Ban counts organized into their respective sites.
          type: object
        ban_total_count:
          description: Number of all known bans seen.
          format: int64
          type: integer
        bd_list_count:
          description: Number of unique bot detector lists.
          format: int64
          type: integer
        bd_list_entries_count:
          description: Number of player entries across all lists.
          format: int64
          type: integer
        community_ban_count:
          description: Number of community bans seen.
          format: int64
          type: integer
        friend_count:
          description: Number of friends tracked.
          format: int64
          type: integer
        game_ban_count:
          description: Number of game bans seen.
          format: int64
          type: integer
        logs_tf_chat_count:
          description: Number of logs.tf chat messages.
          format: int64
          type: integer
        logs_tf_count:
          description: Number of successfully indexed logs.
          format: int64
          type: integer
        logs_tf_player_count:
          description: Number of unique logs.tf players.
          format: int64
          type: integer
        maps_count:
          description: Number of unique maps seen
          format: int64
          type: integer
        name_count:
          description: Number of names tracked.
          format: int64
          type: integer
        players_count:
          description: Number of unique players tracked.
          format: int64
          type: integer
        source_count:
          description: Total number of data sources used.
          format: int64
          type: integer
        vac_count:
          description: Number of vac bans seen.
          format: int64
          type: integer
      required:
        - bd_list_entries_count
        - bd_list_count
        - logs_tf_count
        - logs_tf_player_count
        - logs_tf_chat_count
        - maps_count
        - players_count
        - source_count
        - avatar_count
        - name_count
        - friend_count
        - vac_count
        - game_ban_count
        - community_ban_count
        - ban_total_count
        - ban_counts
      type: object
    SteamBan:
      additionalProperties: false
      properties:
        community_banned:
          type: boolean
        created_on:
          format: date-time
          type: string
        days_since_last_ban:
          format: int64
          type: integer
        economy_ban:
          type: string
        number_of_game_bans:
          format: int64
          type: integer
        number_of_vac_bans:
          format: int64
          type: integer
        steam_id:
          type: string
        updated_on:
          format: date-time
          type: string
        vac_banned:
          type: boolean
      required:
        - steam_id
        - community_banned
        - vac_banned
        - number_of_vac_bans
        - days_since_last_ban
        - number_of_game_bans
        - economy_ban
        - updated_on
        - created_on
      type: object
    SteamRepEntry:
      additionalProperties: false
      properties:
        banned:
          description: Indicates if the player banned
          type: boolean
        reputations:
          description: Comma separated list of reputation sources
          items:
            type: string
          nullable: true
          type: array
        steam_id:
          description: Steam ID of the player
          type: string
      required:
        - steam_id
        - banned
        - reputations
      type: object
    TokenResponse:
      additionalProperties: false
      properties:
        key:
          type: string
      required:
        - key
      type: object
info:
  description: |-
    OpenAPI Specification for TF-API. TF-API is a meta indexer of player and ban data sourced from
    many dozens of different providers.
  title: TF-API
  version: master
openapi: 3.0.3
paths:
  /api/bans/search:
    get:
      description: Query a list of all known bans across all data sources.
      operationId: bans-search
      parameters:
        - explode: false
          in: query
          name: site_name
          schema:
            type: string
        - explode: false
          in: query
          name: hide_unbanned
          schema:
            default: false
            type: boolean
        - example:
            - "76561199574795060"
          explode: false
          in: query
          name: steam_ids
          required: true
          schema:
            example:
              - "76561199574795060"
            items:
              type: string
            maxItems: 100
            minItems: 1
            nullable: true
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Ban"
                nullable: true
                type: array
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Search
      tags:
        - bans
  /api/bd/generate/{site_name}:
    get:
      description: Generate a bot detector lists from one or more sites.
      operationId: bd-list
      parameters:
        - in: path
          name: site_name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BDSchema"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Generate
      tags:
        - bd
  /api/bd/search:
    get:
      description: Search bot detector lists for a steam ID
      operationId: bd-search
      parameters:
        - explode: false
          in: query
          name: steamids
          required: true
          schema:
            items:
              type: string
            nullable: true
            type: array
        - explode: false
          in: query
          name: attrs
          schema:
            items:
              type: string
            nullable: true
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/BDSearchResult"
                nullable: true
                type: array
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Search
      tags:
        - bd
  /api/leagues/competitions:
    get:
      description: Search through the competition history
      operationId: leagues-competitions
      parameters:
        - explode: false
          in: query
          name: league
          schema:
            enum:
              - rgl
              - ozfortress
              - etf2l
              - ugc
            type: string
        - explode: false
          in: query
          name: format
          schema:
            enum:
              - 6v6
              - nr6v6
              - prolander
              - 4v4
              - 1v1
              - highlander
              - passtime
              - ultiduo
              - bball
              - readysteadypan
              - other
            type: string
        - explode: false
          in: query
          name: type
          schema:
            enum:
              - season
              - cup
              - other
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/LeagueResponse"
                nullable: true
                type: array
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Competitions
      tags:
        - leagues
  /api/leagues/history:
    get:
      description: Get Player League History
      operationId: leagues-history
      parameters:
        - description: SteamIDs in any standard format
          example:
            - "76561197970669109"
          explode: false
          in: query
          name: steamids
          required: true
          schema:
            description: SteamIDs in any standard format
            example:
              - "76561197970669109"
            items:
              type: string
            maxItems: 100
            nullable: true
            type: array
        - description: Name of the league
          explode: false
          in: query
          name: league
          schema:
            description: Name of the league
            enum:
              - rgl
              - ozfortress
              - etf2l
              - ugc
            type: string
        - description: Type of event ran
          explode: false
          in: query
          name: type
          schema:
            description: Type of event ran
            enum:
              - season
              - cup
              - other
            type: string
        - description: Game format
          explode: false
          in: query
          name: format
          schema:
            description: Game format
            enum:
              - 6v6
              - nr6v6
              - prolander
              - 4v4
              - 1v1
              - highlander
              - passtime
              - ultiduo
              - bball
              - readysteadypan
              - other
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/PlayerTeamHistoryResponse"
                nullable: true
                type: array
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: History
      tags:
        - leagues
  /api/leagues/members:
    get:
      description: Get a teams members
      operationId: leagues-team-members
      parameters:
        - description: League to query
          explode: false
          in: query
          name: league
          required: true
          schema:
            description: League to query
            enum:
              - rgl
              - ozfortress
              - etf2l
              - ugc
            type: string
        - description: Unique Team ID on the parent site
          explode: false
          in: query
          name: league_id
          required: true
          schema:
            description: Unique Team ID on the parent site
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/LeagueTeamMemberResponse"
                nullable: true
                type: array
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Members
      tags:
        - leagues
  /api/leagues/teams:
    get:
      description: Search through the teams
      operationId: leagues-teams
      parameters:
        - description: Name of the league
          explode: false
          in: query
          name: league
          schema:
            description: Name of the league
            enum:
              - rgl
              - ozfortress
              - etf2l
              - ugc
            type: string
        - description: The unique, to the provided league, id of the team
          explode: false
          in: query
          name: league_id
          schema:
            description: The unique, to the provided league, id of the team
            format: int64
            type: integer
        - description: Query the name
          explode: false
          in: query
          name: name
          schema:
            description: Query the name
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/LeagueTeamResponse"
                nullable: true
                type: array
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Teams
      tags:
        - leagues
  /api/logstf/chat/{steam_id}:
    get:
      description: Query a users logstf chat history.
      operationId: logstf-chat-query
      parameters:
        - example: "76561197972596105"
          in: path
          name: steam_id
          required: true
          schema:
            example: "76561197972596105"
            type: string
        - example: what
          explode: false
          in: query
          name: query
          required: true
          schema:
            example: what
            minLength: 1
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/LogsTFChat"
                nullable: true
                type: array
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Chat History
      tags:
        - logstf
  /api/logstf/log/{logid}:
    get:
      description: Return the requested log.
      operationId: logstf-log
      parameters:
        - example: 57229
          in: path
          name: logid
          required: true
          schema:
            example: 57229
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LogsTFMatch"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Log By ID
      tags:
        - logstf
  /api/logstf/matches/{steam_id}:
    get:
      description: Query a users logstf match history.
      operationId: logstf-match-list
      parameters:
        - example: "76561197972596105"
          in: path
          name: steam_id
          required: true
          schema:
            example: "76561197972596105"
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/LogsTFMatchInfo"
                nullable: true
                type: array
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Player Matches
      tags:
        - logstf
  /api/logstf/summary/{steam_id}:
    get:
      description: Return the computed summaries of the players logstf data.
      operationId: logstf-player-summary
      parameters:
        - example: "76561197972596105"
          in: path
          name: steam_id
          required: true
          schema:
            example: "76561197972596105"
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LogsTFPlayerSummary"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Player Summary
      tags:
        - logstf
  /api/meta:
    get:
      description: Fetches the meta profile which merges several different data sources into a single meta profile.
      operationId: meta-profile
      parameters:
        - description: List of steam ids to query
          explode: false
          in: query
          name: steamids
          required: true
          schema:
            description: List of steam ids to query
            items:
              type: string
            maxItems: 100
            minItems: 1
            nullable: true
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/MetaProfile"
                nullable: true
                type: array
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Profile
      tags:
        - meta
  /api/openapi/schema-3.0.json:
    get:
      description: Returns the OpenAPI 3.0 specs in JSON format.
      operationId: openapi-json-3.0
      responses:
        "200":
          content:
            application/json:
              schema:
                format: base64
                type: string
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: json (3.0)
      tags:
        - openapi
  /api/openapi/schema-3.0.yaml:
    get:
      description: Returns the OpenAPI 3.0 specs in YAML format.
      operationId: openapi-yaml-3.0
      responses:
        "200":
          content:
            application/json:
              schema:
                format: base64
                type: string
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: yaml (3.0)
      tags:
        - openapi
  /api/openapi/schema.json:
    get:
      description: Returns the OpenAPI 3.1 specs in JSON format.
      operationId: openapi-json
      responses:
        "200":
          content:
            application/json:
              schema:
                format: base64
                type: string
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: json (3.1)
      tags:
        - openapi
  /api/openapi/schema.yaml:
    get:
      description: Returns the OpenAPI 3.1 specs in YAML format.
      operationId: openapi-yaml
      responses:
        "200":
          content:
            application/json:
              schema:
                format: base64
                type: string
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: yaml (3.1)
      tags:
        - openapi
  /api/stats/overall:
    get:
      description: Provides some basic stats for the underlying data stores and application.
      operationId: stats-id
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SiteStats"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Overall
      tags:
        - stats
  /api/steam/bans:
    get:
      description: Returns the ban/probation status of the players account. See [steam api](https://wiki.teamfortress.com/wiki/WebAPI/GetPlayerBans).
      operationId: steam-bans
      parameters:
        - description: List of steam ids to query
          explode: false
          in: query
          name: steamids
          required: true
          schema:
            description: List of steam ids to query
            items:
              type: string
            maxItems: 100
            minItems: 1
            nullable: true
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SteamBan"
                nullable: true
                type: array
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Bans
      tags:
        - steam
  /api/steam/friends:
    get:
      description: Get a users list of friends. Only works if friends are public. See [steam api](https://wiki.teamfortress.com/wiki/WebAPI/GetFriendList).
      operationId: steam-friends
      parameters:
        - explode: false
          in: query
          name: steamid
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Friend"
                nullable: true
                type: array
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Friends
      tags:
        - steam
  /api/steam/games:
    get:
      description: Return a list of a users owned games. This will only work if their games are set to public. See [steam api](https://wiki.teamfortress.com/wiki/WebAPI/GetOwnedGames).
      operationId: steam-games
      parameters:
        - description: List of steam ids to query
          explode: false
          in: query
          name: steamids
          required: true
          schema:
            description: List of steam ids to query
            items:
              type: string
            maxItems: 100
            minItems: 1
            nullable: true
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    $ref: "#/components/schemas/GameOwnedPlayer"
                  nullable: true
                  type: array
                type: object
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Games
      tags:
        - steam
  /api/steam/id:
    get:
      description: Used to convert steamids between formats. Can also resolve vanity urls and names.
      operationId: steam-id
      parameters:
        - explode: false
          in: query
          name: steamid
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResolvedSteamID"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: SteamID
      tags:
        - steam
  /api/steam/parse:
    get:
      description: Used to parse a text document for any steamid formats. For example, this could parse the console status output.
      operationId: steam-parse
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                nullable: true
                type: array
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Parse
      tags:
        - steam
  /api/steam/schema-items:
    get:
      description: Fetches the schema items from valves GetSchemaItems endpoint
      operationId: steam-schema-items
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SchemaItem"
                nullable: true
                type: array
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Schema Items
      tags:
        - steam
  /api/steam/summary:
    get:
      description: Returns the summary provided by the [steam api](https://wiki.teamfortress.com/wiki/WebAPI/GetPlayerSummaries).
      operationId: steam-summaries
      parameters:
        - description: List of steam ids to query
          explode: false
          in: query
          name: steamids
          required: true
          schema:
            description: List of steam ids to query
            items:
              type: string
            maxItems: 100
            minItems: 1
            nullable: true
            type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/PlayerSummaryResponse"
                nullable: true
                type: array
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Summaries
      tags:
        - steam
  /api/steamrep/query:
    get:
      description: Query the steamrep database for the provided steam ids.
      operationId: steamrep-query
      parameters:
        - example:
            - "76561193715616988"
          explode: false
          in: query
          name: steam_ids
          required: true
          schema:
            example:
              - "76561193715616988"
            format: steam,steam2,steam64
            items:
              type: string
            maxItems: 100
            minItems: 1
            type: array
            uniqueItems: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/SteamRepEntry"
                nullable: true
                type: array
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Query
      tags:
        - steamrep
