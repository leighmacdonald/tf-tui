version: 2
project_name: tf-tui

#before:
#  hooks:
#    - make frontend
#dockers:
#  - dockerfile: "docker/Dockerfile"
#    skip_push: false
#    extra_files:
#      - LICENSE
#    ids: ["tf-tui"]
#    image_templates:
#      - "ghcr.io/leighmacdonald/tf-tui:latest"
#      - "ghcr.io/leighmacdonald/tf-tui:{{ .Tag }}"
#      - "ghcr.io/leighmacdonald/tf-tui:v{{ .Major }}"
#    build_flag_templates:
#      - "--pull"
#      - "--label=org.opencontainers.image.created={{.Date}}"
#      - "--label=org.opencontainers.image.title={{.ProjectName}}"
#      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
#      - "--label=org.opencontainers.image.version={{.Version}}"

gomod:
  # Proxy a module from proxy.golang.org, making the builds verifiable.
  # This will only be effective if running against a tag. Snapshots will ignore
  # this setting.
  proxy: true

builds:
  - env:
      - CGO_ENABLED=0
    main: ./internal/cmd/tf-tui
    binary: tf-tui
    goos:
      - linux
      - windows
      #- darwin
    mod_timestamp: "{{.CommitTimestamp}}"
    flags:
      - -trimpath
    tags:
      - release
    goarch:
      - amd64
    ldflags:
      - -s
      - -w
      - -X main.BuildVersion={{.Version}}
      - -X main.BuildCommit={{.Commit}}
      - -X main.BuildDate={{.CommitDate}}

archives:
  - formats: ["tar.gz"]
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- .Version }}-
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        formats: ["zip"]

changelog:
  use: github-native
